<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>containers on Ramblings about all things technical</title><link>https://blog.jamesclonk.io/tags/containers/</link><description>Recent content in containers on Ramblings about all things technical</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Nov 2020 12:49:34 +0200</lastBuildDate><atom:link href="https://blog.jamesclonk.io/tags/containers/index.xml" rel="self" type="application/rss+xml"/><item><title>My own personal Kubernetes</title><link>https://blog.jamesclonk.io/posts/my-own-kubernetes/</link><pubDate>Mon, 30 Nov 2020 12:49:34 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/my-own-kubernetes/</guid><description>Managed Kubernetes? On my journey where I was (unfortunately) forced to migrate from Cloud Foundry to Kubernetes, I first went with a &amp;ldquo;Managed Kubernetes-as-a-Service&amp;rdquo; offering. You can read about that here.
But it didn&amp;rsquo;t take long for problems and issues to start emerging. The cluster not being on exactly the version I wanted it to be, pre-installed components that didn&amp;rsquo;t behave they way I wanted (nginx ingress controller for example), price hikes and occasional outages, not really a lot of insight into the behind the scenes of my cluster, etc.</description></item><item><title>Migrating from Cloud Foundry to Kubernetes</title><link>https://blog.jamesclonk.io/posts/migrating-from-cloud-foundry-to-kubernetes/</link><pubDate>Mon, 29 Jun 2020 17:28:34 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/migrating-from-cloud-foundry-to-kubernetes/</guid><description>For quite a few years now I&amp;rsquo;ve been hosting and running all my personal projects on Cloud Foundry. It&amp;rsquo;s an open-source, highly-available, highly scalable, super comfortable to use platform-as-a-service for web applications and developers. Deploying your Ruby, Python or Golang apps is as simple as just typing cf push. Your source code will be uploaded, compiled into a runnable image, and scheduled and be running as container on the platform. Really, in terms of developer experience there is nothing else remotely like it (Except maybe Heroku, from which it drew a lot of inspiration in its early days).</description></item><item><title>Cloud Foundry and Prometheus</title><link>https://blog.jamesclonk.io/posts/cloud-foundry-and-prometheus/</link><pubDate>Tue, 26 Nov 2019 11:40:41 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/cloud-foundry-and-prometheus/</guid><description>Where are my metrics? A Cloud Foundry story Loggregator The Loggregator in Cloud Foundry is the system behind the scenes that&amp;rsquo;s responsible for gathering and streaming logs and metrics about user apps. It also gathers and streams metrics from Cloud Foundry components itself and health metrics from other platform VMs. Loggregator allows you to view these logs and metrics either through the Loggregator CF-CLI plugins or through various third-party services and consumers, like for example the Cloud-Controller (API), a Firehose Nozzle or a Log-Cache endpoint.</description></item><item><title>Scheduling Tasks in Cloud Foundry</title><link>https://blog.jamesclonk.io/posts/scheduling-tasks-in-cloud-foundry/</link><pubDate>Tue, 03 Sep 2019 14:23:30 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/scheduling-tasks-in-cloud-foundry/</guid><description>The Task-Scheduler service on the Swisscom Application Cloud allows you to schedule and automatically run tasks for your applications. You can use it to schedule periodical execution of any tasks on the Application Cloud, including database migrations, emails, batch jobs, etc.
What are Tasks? While most of the time you are probably using the Swisscom Application Cloud (A managed Cloud Foundry platform-as-a-service) to push long running processes or &amp;ldquo;apps&amp;rdquo; as they are commonly called, there is the occasional use case for tasks.</description></item><item><title>Container Networking with Cloud Foundry</title><link>https://blog.jamesclonk.io/posts/container-networking-with-cloud-foundry/</link><pubDate>Sat, 19 May 2018 16:06:35 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/container-networking-with-cloud-foundry/</guid><description>Container-to-Container Networking on the Swisscom Application Cloud allows for secure and fast direct TCP and UDP communication between your applications. And thanks to its built in Application Service Discovery your app containers will easily be able to locate each other.
The Swisscom Application Cloud uses the open-source distribution of Cloud Foundry to provide you with a managed platform-as-a-service. Ever since the platforms official release we&amp;rsquo;ve continually been adding and implementing new features, and one of these is the Container-to-Container Networking.</description></item><item><title>TCP-Routing on Cloud Foundry</title><link>https://blog.jamesclonk.io/posts/tcp-routing-on-cloud-foundry/</link><pubDate>Sun, 15 Apr 2018 10:33:42 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/tcp-routing-on-cloud-foundry/</guid><description>The Swisscom Application Cloud, which is based on the open source industry standard Cloud Foundry, offers an exciting new feature for its users. TCP routing, the ability to support and expose any TCP-based, non-HTTP application to the world. Let&amp;rsquo;s have a closer look and learn how to use TCP routing.
The Swisscom Application Cloud is based on Cloud Foundry, the leading open source industry standard for building your own platform-as-a-service.</description></item><item><title>Docker and Cloud Foundry</title><link>https://blog.jamesclonk.io/posts/docker-and-cloud-foundry/</link><pubDate>Wed, 04 May 2016 14:35:57 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/docker-and-cloud-foundry/</guid><description>Cloud Foundry is the open source industry standard for a Platform-as-a-Service. With the next version of the Cloud Foundry scheduler, the user is now able to run his Docker images with a full PaaS experience on the Swisscom Application Cloud. Find out how to deploy your Docker images now!
&amp;ldquo;Docker! Docker! Docker!&amp;rdquo; â€“ What is it? From https://www.docker.com/what-docker:
Docker allows you to package an application with all of its dependencies into a standardized unit for software development.</description></item></channel></rss>