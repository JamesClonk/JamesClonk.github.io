<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Knative on Ramblings about all things technical</title><link>https://blog.jamesclonk.io/tags/knative/</link><description>Recent content in Knative on Ramblings about all things technical</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 13 Mar 2021 13:54:27 +0000</lastBuildDate><atom:link href="https://blog.jamesclonk.io/tags/knative/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Knative Serving on Kubernetes</title><link>https://blog.jamesclonk.io/posts/using-knative-serving/</link><pubDate>Sat, 13 Mar 2021 13:54:27 +0000</pubDate><guid>https://blog.jamesclonk.io/posts/using-knative-serving/</guid><description>Serverless Computing? We probably all heard of AWS Lambda, Function-as-a-Service (FaaS) or Serverless Computing in general before. And while I find the term &amp;ldquo;serverless&amp;rdquo; rather silly, its actual meaning of executing compute processes or containers only on-demand in the cloud and allow for a simplified, no capacity planning required, pay-only-what-you-use model of running your applications or code is not to be easily dismissed and can be quite valuable.
Since allowing yourself to be captured and locked into any particular vendor, escpecially like going for AWS Lambda, is a big mistake however, what options are there if we want to avoid such folly?</description></item></channel></rss>