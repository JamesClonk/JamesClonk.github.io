<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on Ramblings about all things technical</title><link>https://blog.jamesclonk.io/tags/kubernetes/</link><description>Recent content in kubernetes on Ramblings about all things technical</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Jul 2022 19:22:51 +0200</lastBuildDate><atom:link href="https://blog.jamesclonk.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Kubernetes Service Bindings in Backman</title><link>https://blog.jamesclonk.io/posts/backman-and-kubernetes-service-bindings/</link><pubDate>Sun, 10 Jul 2022 19:22:51 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/backman-and-kubernetes-service-bindings/</guid><description>What is Backman again? I mentioned Backman already once in a previous post, but in short it&amp;rsquo;s an application for managing database backups. Backman can be deployed on Cloud Foundry or Kubernetes and automatically detects and configures your databases through bindings, creates backups and stores these on an S3-compatible object storage. Backups can later be restored on-demand or downloaded.
Run Backman on Kubernetes Deploying and running Backman on Kubernetes has gotten fairly straightforward these days.</description></item><item><title>Running WireGuard VPN (with ad-blocking) on Kubernetes</title><link>https://blog.jamesclonk.io/posts/wireguard-on-kubernetes/</link><pubDate>Fri, 15 Oct 2021 17:19:41 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/wireguard-on-kubernetes/</guid><description>WireGuard So, after being back from a recent vacation trip and having to use the hotel Wi-Fi for my mobile phone, I once more started thinking about setting up a VPN endpoint for myself. I simply don&amp;rsquo;t trust &amp;ldquo;foreign&amp;rdquo; Wi-Fi hotspots.
A few years ago I kept a simple OpenVPN installation up and running on a DigitalOcean droplet, but let it deteriorate and stopped using it at some point. Also because of the Coronavirus pandemic that started last year there wasn&amp;rsquo;t much travelling around anyway, thus I had no immediate need for a VPN.</description></item><item><title>Automatic database backups with Backman</title><link>https://blog.jamesclonk.io/posts/database-backups-with-backman/</link><pubDate>Tue, 17 Mar 2020 11:17:37 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/database-backups-with-backman/</guid><description>I&amp;rsquo;ve always been a big fan of using Postgres as my main database backend for all my applications, but I&amp;rsquo;ve also always been paranoid about losing data and the need for backups. So when I started pushing my applications onto the Swisscom Application Cloud and attaching Postgres databases to them (hosted by ElephantSQL), I needed a way to ensure there will always be backups, that they are under my control and supervision and hosted externally / off-site from the Postgres-provider itself, preferably on an S3 object store.</description></item><item><title>Using a Service Broker in Cloud Foundry and Kubernetes</title><link>https://blog.jamesclonk.io/posts/using-a-service-broker-in-cloud-foundry/</link><pubDate>Tue, 31 Dec 2019 11:23:54 +0200</pubDate><guid>https://blog.jamesclonk.io/posts/using-a-service-broker-in-cloud-foundry/</guid><description>OSBAPI? The Open Service Broker API (OSBAPI) is a specification that defines a common language for service providers that your cloud native applications can use to manage cloud services without lockin.
OSBAPI allows independent software vendors, service providers and developers to easily integrate and consume services for workloads running on cloud native platforms such as the Swisscom Application Cloud, which is based on Cloud Foundry and Kubernetes. The specification describes a simple set of API endpoints which can be used to provision, access and manage various service offerings, and has been adopted by many different platforms and thousands of service providers by now.</description></item></channel></rss>